if(_jstype=jsb_GetJsType("UnityEngine.Mathf")){var mathFields=_jstype.staticFields;mathFields.PI=Math.PI;mathFields.Infinity=Number.POSITIVE_INFINITY;mathFields.NegativeInfinity=Number.NEGATIVE_INFINITY;mathFields.Deg2Rad=.01745329;mathFields.Rad2Deg=57.29578;mathFields.Epsilon=Number.EPSILON;var mathfDefs=_jstype.staticDefinition;mathfDefs.Abs$$Single=Math.abs;mathfDefs.Abs$$Int32=Math.abs;mathfDefs.Approximately=function(a,b){return Math.abs(b-a)<Math.max(1E-6*Math.max(Math.abs(a),Math.abs(b)),
1.121039E-44)};mathfDefs.Repeat=function(a,b){return a-Math.floor(a/b)*b};mathfDefs.DeltaAngle=function(a,b){var c=this.Repeat(b-a,360);180<c&&(c-=360);return c};mathfDefs.Sqrt=Math.sqrt;mathfDefs.Pow=Math.pow;mathfDefs.Exp=Math.exp;mathfDefs.Sign=Math.sign;mathfDefs.Sin=Math.sin;mathfDefs.Asin=Math.asin;mathfDefs.Cos=Math.cos;mathfDefs.Acos=Math.acos;mathfDefs.Tan=Math.tan;mathfDefs.Atan=Math.atan;mathfDefs.Atan2=Math.atan2;mathfDefs.Ceil=Math.ceil;mathfDefs.CeilToInt=Math.ceil;mathfDefs.Floor=Math.floor;
mathfDefs.FloorToInt=Math.floor;mathfDefs.Round=Math.round;mathfDefs.RoundToInt=Math.round;Math.clamp=function(a,b,c){a<b?a=b:a>c&&(a=c);return a};mathfDefs.Clamp$$Int32$$Int32$$Int32=Math.clamp;mathfDefs.Clamp$$Single$$Single$$Single=Math.clamp;mathfDefs.Clamp01=function(a){return Math.clamp(a,0,1)};mathfDefs.Lerp=function(a,b,c){return a+(b-a)*this.Clamp01(c)};mathfDefs.InverseLerp=function(a,b,c){return a<b?c<a?0:c>b?1:c=(c-a)/(b-a):a<=b?0:c<b?1:c>a?0:1-(c-b)/(a-b)};mathfDefs.LerpAngle=function(a,
b,c){b=this.Repeat(b-a,360);180<b&&(b-=360);return a+b*this.Clamp01(c)};mathfDefs.Log$$Single=Math.log;mathfDefs.Log10=Math.log10;mathfDefs.Log$$Single$$Single=function(a,b){return Math.log(a)/Math.log(b)};Math.maxArray=function(a){return Math.max.apply(null,a)};mathfDefs.Max$$Int32$$Int32=Math.max;mathfDefs.Max$$Int32$Array=Math.maxArray;mathfDefs.Max$$Single$$Single=Math.max;mathfDefs.Max$$Single$Array=Math.maxArray;Math.minArray=function(a){return Math.min.apply(null,a)};mathfDefs.Min$$Int32$$Int32=
Math.min;mathfDefs.Min$$Int32$Array=Math.minArray;mathfDefs.Min$$Single$$Single=Math.min;mathfDefs.Min$$Single$Array=Math.minArray};
