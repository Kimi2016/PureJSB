
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using DG.Tweening.Core;

using jsval = JSApi.jsval;

public class JSB_DG_Tweening_Core_TweenerCore_3
{

////////////////////// TweenerCore`3 ///////////////////////////////////////
// constructors

// fields

// properties

// methods
public static MethodID methodID0 = new MethodID("ChangeEndValue", "Tweener", TypeFlag.None, new string[]{"Object", "Boolean"}, new TypeFlag[]{TypeFlag.None, TypeFlag.None});

static bool TweenerCoreA3_ChangeEndValue__Object__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = GenericTypeCache.getMethod(vc.csObj.GetType(), methodID0); 
    if (method == null) return true;

    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }

    return true;
}
public static MethodID methodID1 = new MethodID("ChangeEndValue", "Tweener", TypeFlag.None, new string[]{"Object", "Single", "Boolean"}, new TypeFlag[]{TypeFlag.None, TypeFlag.None, TypeFlag.None});

static bool TweenerCoreA3_ChangeEndValue__Object__Single__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = GenericTypeCache.getMethod(vc.csObj.GetType(), methodID1); 
    if (method == null) return true;

    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }
    else if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }
    else if (len == 3) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1, arg2 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }

    return true;
}
public static MethodID methodID2 = new MethodID("ChangeStartValue", "Tweener", TypeFlag.None, new string[]{"Object", "Single"}, new TypeFlag[]{TypeFlag.None, TypeFlag.None});

static bool TweenerCoreA3_ChangeStartValue__Object__Single(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = GenericTypeCache.getMethod(vc.csObj.GetType(), methodID2); 
    if (method == null) return true;

    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }
    else if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }

    return true;
}
public static MethodID methodID3 = new MethodID("ChangeValues", "Tweener", TypeFlag.None, new string[]{"Object", "Object", "Single"}, new TypeFlag[]{TypeFlag.None, TypeFlag.None, TypeFlag.None});

static bool TweenerCoreA3_ChangeValues__Object__Object__Single(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = GenericTypeCache.getMethod(vc.csObj.GetType(), methodID3); 
    if (method == null) return true;

    int len = argc;
    if (len == 2) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Object arg1 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }
    else if (len == 3) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Object arg1 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Single arg2 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1, arg2 };
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, method.Invoke(vc.csObj, arr_t));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(DG.Tweening.Core.TweenerCore<,,>);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(TweenerCoreA3_ChangeEndValue__Object__Boolean, "ChangeEndValue"),
        new JSMgr.MethodCallBackInfo(TweenerCoreA3_ChangeEndValue__Object__Single__Boolean, "ChangeEndValue"),
        new JSMgr.MethodCallBackInfo(TweenerCoreA3_ChangeStartValue__Object__Single, "ChangeStartValue"),
        new JSMgr.MethodCallBackInfo(TweenerCoreA3_ChangeValues__Object__Object__Single, "ChangeValues"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
