
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_CharacterJoint
{

////////////////////// CharacterJoint ///////////////////////////////////////
// constructors

static bool CharacterJoint_CharacterJoint1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.CharacterJoint());
    }

    return true;
}

// fields

// properties
static void CharacterJoint_swingAxis(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.swingAxis;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.swingAxis = arg0;
    }
}
static void CharacterJoint_lowTwistLimit(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.lowTwistLimit;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.SoftJointLimit arg0 = (UnityEngine.SoftJointLimit)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.lowTwistLimit = arg0;
    }
}
static void CharacterJoint_highTwistLimit(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.highTwistLimit;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.SoftJointLimit arg0 = (UnityEngine.SoftJointLimit)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.highTwistLimit = arg0;
    }
}
static void CharacterJoint_swing1Limit(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.swing1Limit;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.SoftJointLimit arg0 = (UnityEngine.SoftJointLimit)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.swing1Limit = arg0;
    }
}
static void CharacterJoint_swing2Limit(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.swing2Limit;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.SoftJointLimit arg0 = (UnityEngine.SoftJointLimit)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.swing2Limit = arg0;
    }
}
static void CharacterJoint_targetRotation(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.targetRotation;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Quaternion arg0 = (UnityEngine.Quaternion)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.targetRotation = arg0;
    }
}
static void CharacterJoint_targetAngularVelocity(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.targetAngularVelocity;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.targetAngularVelocity = arg0;
    }
}
static void CharacterJoint_rotationDrive(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        var result = _this.rotationDrive;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.JointDrive arg0 = (UnityEngine.JointDrive)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.CharacterJoint _this = (UnityEngine.CharacterJoint)vc.csObj;
        _this.rotationDrive = arg0;
    }
}

// methods


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.CharacterJoint);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        CharacterJoint_swingAxis,
        CharacterJoint_lowTwistLimit,
        CharacterJoint_highTwistLimit,
        CharacterJoint_swing1Limit,
        CharacterJoint_swing2Limit,
        CharacterJoint_targetRotation,
        CharacterJoint_targetAngularVelocity,
        CharacterJoint_rotationDrive,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(CharacterJoint_CharacterJoint1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
