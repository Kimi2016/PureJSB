
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using DG.Tweening;
using DG.Tweening.Core;

using jsval = JSApi.jsval;

public class JSB_DG_Tweening_TweenSettingsExtensions
{

////////////////////// TweenSettingsExtensions ///////////////////////////////////////
// constructors

// fields

// properties

// methods

static bool TweenSettingsExtensions_Append__Sequence__Tween(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.Tween arg1 = (DG.Tweening.Tween)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.Append(arg0, arg1));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_AppendCallback_GetDelegate_member1_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool TweenSettingsExtensions_AppendCallback__Sequence__TweenCallback(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_AppendCallback_GetDelegate_member1_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.AppendCallback(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_AppendInterval__Sequence__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.AppendInterval(arg0, arg1));
    }

    return true;
}
public static MethodID methodID3 = new MethodID("From", "T", TypeFlag.IsT, new string[]{"T", "Boolean"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_FromT1__T__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID3, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID4 = new MethodID("From", "T", TypeFlag.IsT, new string[]{"T"}, new TypeFlag[]{TypeFlag.IsT});

static bool TweenSettingsExtensions_FromT1__T(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID4, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 1) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}

static bool TweenSettingsExtensions_Insert__Sequence__Single__Tween(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        DG.Tweening.Tween arg2 = (DG.Tweening.Tween)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.Insert(arg0, arg1, arg2));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_InsertCallback_GetDelegate_member6_arg2(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool TweenSettingsExtensions_InsertCallback__Sequence__Single__TweenCallback(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg2 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_InsertCallback_GetDelegate_member6_arg2(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.InsertCallback(arg0, arg1, arg2));
    }

    return true;
}

static bool TweenSettingsExtensions_Join__Sequence__Tween(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.Tween arg1 = (DG.Tweening.Tween)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.Join(arg0, arg1));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnComplete_GetDelegate_member8_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID8 = new MethodID("OnComplete", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnCompleteT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID8, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnComplete_GetDelegate_member8_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnKill_GetDelegate_member9_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID9 = new MethodID("OnKill", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnKillT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID9, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnKill_GetDelegate_member9_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnPause_GetDelegate_member10_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID10 = new MethodID("OnPause", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnPauseT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID10, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnPause_GetDelegate_member10_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnPlay_GetDelegate_member11_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID11 = new MethodID("OnPlay", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnPlayT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID11, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnPlay_GetDelegate_member11_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnRewind_GetDelegate_member12_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID12 = new MethodID("OnRewind", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnRewindT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID12, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnRewind_GetDelegate_member12_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnStart_GetDelegate_member13_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID13 = new MethodID("OnStart", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnStartT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID13, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnStart_GetDelegate_member13_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnStepComplete_GetDelegate_member14_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID14 = new MethodID("OnStepComplete", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnStepCompleteT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID14, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnStepComplete_GetDelegate_member14_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_OnUpdate_GetDelegate_member15_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID15 = new MethodID("OnUpdate", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_OnUpdateT1__T__TweenCallback(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID15, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnUpdate_GetDelegate_member15_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static TweenCallback<System.Int32> TweenSettingsExtensions_OnWaypointChange_GetDelegate_member16_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<TweenCallback<System.Int32>>(objFunction.jsObjID);
    if (action == null)
    {
        action = (value) => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID, value);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID16 = new MethodID("OnWaypointChange", "T", TypeFlag.IsT, new string[]{"T", "TweenCallback`1"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.IsGenericType});

static bool TweenSettingsExtensions_OnWaypointChangeT1__T__TweenCallbackT1_Int32(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID16, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        TweenCallback<System.Int32> arg1 = JSDataExchangeMgr.GetJSArg<TweenCallback<System.Int32>>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_OnWaypointChange_GetDelegate_member16_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (TweenCallback<System.Int32>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}

static bool TweenSettingsExtensions_Prepend__Sequence__Tween(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.Tween arg1 = (DG.Tweening.Tween)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.Prepend(arg0, arg1));
    }

    return true;
}
public static DG.Tweening.TweenCallback TweenSettingsExtensions_PrependCallback_GetDelegate_member18_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.TweenCallback>(objFunction.jsObjID);
    if (action == null)
    {
        action = () => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}

static bool TweenSettingsExtensions_PrependCallback__Sequence__TweenCallback(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.TweenCallback arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.TweenCallback>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_PrependCallback_GetDelegate_member18_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.TweenCallback)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.PrependCallback(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_PrependInterval__Sequence__Single(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        DG.Tweening.Sequence arg0 = (DG.Tweening.Sequence)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.PrependInterval(arg0, arg1));
    }

    return true;
}
public static MethodID methodID20 = new MethodID("SetAs", "T", TypeFlag.IsT, new string[]{"T", "Tween"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetAsT1__T__Tween(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID20, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.Tween arg1 = (DG.Tweening.Tween)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID21 = new MethodID("SetAs", "T", TypeFlag.IsT, new string[]{"T", "TweenParams"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetAsT1__T__TweenParams(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID21, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.TweenParams arg1 = (DG.Tweening.TweenParams)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID22 = new MethodID("SetAutoKill", "T", TypeFlag.IsT, new string[]{"T", "Boolean"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetAutoKillT1__T__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID22, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID23 = new MethodID("SetAutoKill", "T", TypeFlag.IsT, new string[]{"T"}, new TypeFlag[]{TypeFlag.IsT});

static bool TweenSettingsExtensions_SetAutoKillT1__T(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID23, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 1) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID24 = new MethodID("SetDelay", "T", TypeFlag.IsT, new string[]{"T", "Single"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetDelayT1__T__Single(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID24, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID25 = new MethodID("SetEase", "T", TypeFlag.IsT, new string[]{"T", "Ease", "Single", "Single"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None, TypeFlag.None, TypeFlag.None});

static bool TweenSettingsExtensions_SetEaseT1__T__Ease__Single__Single(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID25, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 4) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.Ease arg1 = (DG.Tweening.Ease)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Single arg2 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        System.Single arg3 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1, arg2, arg3 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID26 = new MethodID("SetEase", "T", TypeFlag.IsT, new string[]{"T", "Ease", "Single"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None, TypeFlag.None});

static bool TweenSettingsExtensions_SetEaseT1__T__Ease__Single(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID26, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 3) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.Ease arg1 = (DG.Tweening.Ease)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Single arg2 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1, arg2 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID27 = new MethodID("SetEase", "T", TypeFlag.IsT, new string[]{"T", "Ease"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetEaseT1__T__Ease(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID27, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.Ease arg1 = (DG.Tweening.Ease)JSApi.getEnum((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static DG.Tweening.EaseFunction TweenSettingsExtensions_SetEase_GetDelegate_member28_arg1(CSRepresentedObject objFunction)
{
    if (objFunction == null || objFunction.jsObjID == 0)
    {
        return null;
    }
    var action = JSMgr.getJSFunCSDelegateRel<DG.Tweening.EaseFunction>(objFunction.jsObjID);
    if (action == null)
    {
        action = (time, duration, overshootOrAmplitude, period) => 
        {
            JSMgr.vCall.CallJSFunctionValue(0, objFunction.jsObjID, time, duration, overshootOrAmplitude, period);
            return (System.Single)JSApi.getSingle((int)JSApi.GetType.JSFunRet);
        };
        JSMgr.addJSFunCSDelegateRel(objFunction.jsObjID, action);
    }
    return action;
}
public static MethodID methodID28 = new MethodID("SetEase", "T", TypeFlag.IsT, new string[]{"T", "EaseFunction"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetEaseT1__T__EaseFunction(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID28, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.EaseFunction arg1 = JSDataExchangeMgr.GetJSArg<DG.Tweening.EaseFunction>(()=>
        {
            if (JSApi.isFunctionS((int)JSApi.GetType.Arg))
                return TweenSettingsExtensions_SetEase_GetDelegate_member28_arg1(JSApi.getFunctionS((int)JSApi.GetType.Arg));
            else
                return (DG.Tweening.EaseFunction)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        });
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID29 = new MethodID("SetEase", "T", TypeFlag.IsT, new string[]{"T", "AnimationCurve"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetEaseT1__T__AnimationCurve(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID29, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        UnityEngine.AnimationCurve arg1 = (UnityEngine.AnimationCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID30 = new MethodID("SetId", "T", TypeFlag.IsT, new string[]{"T", "Object"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetIdT1__T__Object(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID30, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Object arg1 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}

static bool TweenSettingsExtensions_SetLookAt__TweenerCoreT3_Vector3_Path_PathOptions__Transform__NullableT1_Vector3__NullableT1_Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Transform arg1 = (UnityEngine.Transform)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Transform arg1 = (UnityEngine.Transform)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg2 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1, arg2));
    }
    else if (len == 4) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Transform arg1 = (UnityEngine.Transform)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg2 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg3 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool TweenSettingsExtensions_SetLookAt__TweenerCoreT3_Vector3_Path_PathOptions__Vector3__NullableT1_Vector3__NullableT1_Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg2 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1, arg2));
    }
    else if (len == 4) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.Vector3 arg1 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg2 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg3 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool TweenSettingsExtensions_SetLookAt__TweenerCoreT3_Vector3_Path_PathOptions__Single__NullableT1_Vector3__NullableT1_Vector3(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg2 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1, arg2));
    }
    else if (len == 4) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Single arg1 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg2 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        Nullable<UnityEngine.Vector3> arg3 = (Nullable<UnityEngine.Vector3>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetLookAt(arg0, arg1, arg2, arg3));
    }

    return true;
}
public static MethodID methodID34 = new MethodID("SetLoops", "T", TypeFlag.IsT, new string[]{"T", "Int32", "LoopType"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None, TypeFlag.None});

static bool TweenSettingsExtensions_SetLoopsT1__T__Int32__LoopType(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID34, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 3) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        DG.Tweening.LoopType arg2 = (DG.Tweening.LoopType)JSApi.getEnum((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1, arg2 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID35 = new MethodID("SetLoops", "T", TypeFlag.IsT, new string[]{"T", "Int32"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetLoopsT1__T__Int32(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID35, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Color_Color_ColorOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions> arg0 = (TweenerCore<UnityEngine.Color, UnityEngine.Color, DG.Tweening.Plugins.Options.ColorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Rect_Rect_RectOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Rect, UnityEngine.Rect, DG.Tweening.Plugins.Options.RectOptions> arg0 = (TweenerCore<UnityEngine.Rect, UnityEngine.Rect, DG.Tweening.Plugins.Options.RectOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector4_Vector4_VectorOptions__AxisConstraint__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector4, UnityEngine.Vector4, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector4, UnityEngine.Vector4, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector4, UnityEngine.Vector4, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector4, UnityEngine.Vector4, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_VectorOptions__AxisConstraint__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector4_Vector4_VectorOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector4, UnityEngine.Vector4, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector4, UnityEngine.Vector4, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Path_PathOptions__AxisConstraint__AxisConstraint(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg2 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Path_PathOptions__Boolean__AxisConstraint__AxisConstraint(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg2 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2));
    }
    else if (len == 4) 
    {
        TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions> arg0 = (TweenerCore<UnityEngine.Vector3, DG.Tweening.Plugins.Core.PathCore.Path, DG.Tweening.Plugins.Options.PathOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg2 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg3 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_Array_Vector3ArrayOptions__AxisConstraint__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3[], DG.Tweening.Plugins.Options.Vector3ArrayOptions> arg0 = (TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3[], DG.Tweening.Plugins.Options.Vector3ArrayOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3[], DG.Tweening.Plugins.Options.Vector3ArrayOptions> arg0 = (TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3[], DG.Tweening.Plugins.Options.Vector3ArrayOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_String_String_StringOptions__Boolean__ScrambleMode__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<System.String, System.String, DG.Tweening.Plugins.Options.StringOptions> arg0 = (TweenerCore<System.String, System.String, DG.Tweening.Plugins.Options.StringOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<System.String, System.String, DG.Tweening.Plugins.Options.StringOptions> arg0 = (TweenerCore<System.String, System.String, DG.Tweening.Plugins.Options.StringOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        DG.Tweening.ScrambleMode arg2 = (DG.Tweening.ScrambleMode)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2));
    }
    else if (len == 4) 
    {
        TweenerCore<System.String, System.String, DG.Tweening.Plugins.Options.StringOptions> arg0 = (TweenerCore<System.String, System.String, DG.Tweening.Plugins.Options.StringOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        DG.Tweening.ScrambleMode arg2 = (DG.Tweening.ScrambleMode)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.String arg3 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_Array_Vector3ArrayOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3[], DG.Tweening.Plugins.Options.Vector3ArrayOptions> arg0 = (TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3[], DG.Tweening.Plugins.Options.Vector3ArrayOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_VectorOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector3, UnityEngine.Vector3, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Single_Single_FloatOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<System.Single, System.Single, DG.Tweening.Plugins.Options.FloatOptions> arg0 = (TweenerCore<System.Single, System.Single, DG.Tweening.Plugins.Options.FloatOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector2_Vector2_VectorOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector2_Vector2_VectorOptions__AxisConstraint__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }
    else if (len == 3) 
    {
        TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions> arg0 = (TweenerCore<UnityEngine.Vector2, UnityEngine.Vector2, DG.Tweening.Plugins.Options.VectorOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        DG.Tweening.AxisConstraint arg1 = (DG.Tweening.AxisConstraint)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1, arg2));
    }

    return true;
}

static bool TweenSettingsExtensions_SetOptions__TweenerCoreT3_Quaternion_Vector3_QuaternionOptions__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions> arg0 = (TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0));
    }
    else if (len == 2) 
    {
        TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions> arg0 = (TweenerCore<UnityEngine.Quaternion, UnityEngine.Vector3, DG.Tweening.Plugins.Options.QuaternionOptions>)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, DG.Tweening.TweenSettingsExtensions.SetOptions(arg0, arg1));
    }

    return true;
}
public static MethodID methodID51 = new MethodID("SetRecyclable", "T", TypeFlag.IsT, new string[]{"T", "Boolean"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetRecyclableT1__T__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID51, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID52 = new MethodID("SetRecyclable", "T", TypeFlag.IsT, new string[]{"T"}, new TypeFlag[]{TypeFlag.IsT});

static bool TweenSettingsExtensions_SetRecyclableT1__T(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID52, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 1) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID53 = new MethodID("SetRelative", "T", TypeFlag.IsT, new string[]{"T", "Boolean"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetRelativeT1__T__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID53, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID54 = new MethodID("SetRelative", "T", TypeFlag.IsT, new string[]{"T"}, new TypeFlag[]{TypeFlag.IsT});

static bool TweenSettingsExtensions_SetRelativeT1__T(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID54, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 1) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID55 = new MethodID("SetSpeedBased", "T", TypeFlag.IsT, new string[]{"T", "Boolean"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetSpeedBasedT1__T__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID55, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID56 = new MethodID("SetSpeedBased", "T", TypeFlag.IsT, new string[]{"T"}, new TypeFlag[]{TypeFlag.IsT});

static bool TweenSettingsExtensions_SetSpeedBasedT1__T(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID56, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 1) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID57 = new MethodID("SetTarget", "T", TypeFlag.IsT, new string[]{"T", "Object"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetTargetT1__T__Object(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID57, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Object arg1 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID58 = new MethodID("SetUpdate", "T", TypeFlag.IsT, new string[]{"T", "UpdateType", "Boolean"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None, TypeFlag.None});

static bool TweenSettingsExtensions_SetUpdateT1__T__UpdateType__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID58, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 3) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.UpdateType arg1 = (DG.Tweening.UpdateType)JSApi.getEnum((int)JSApi.GetType.Arg);
        System.Boolean arg2 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1, arg2 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID59 = new MethodID("SetUpdate", "T", TypeFlag.IsT, new string[]{"T", "Boolean"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetUpdateT1__T__Boolean(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID59, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        System.Boolean arg1 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}
public static MethodID methodID60 = new MethodID("SetUpdate", "T", TypeFlag.IsT, new string[]{"T", "UpdateType"}, new TypeFlag[]{TypeFlag.IsT, TypeFlag.None});

static bool TweenSettingsExtensions_SetUpdateT1__T__UpdateType(JSVCall vc, int argc)
{
    // Get generic method by name and param count.
    MethodInfo method = JSDataExchangeMgr.makeGenericMethod(typeof(DG.Tweening.TweenSettingsExtensions), methodID60, 1); 
    if (method == null) return true;

    int len = argc - 1;
    if (len == 2) 
    {
        object arg0 = (object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
        DG.Tweening.UpdateType arg1 = (DG.Tweening.UpdateType)JSApi.getEnum((int)JSApi.GetType.Arg);
        object[] arr_t = new object[]{ arg0, arg1 };
                JSMgr.datax.setWhatever((int)JSApi.SetType.Rval, method.Invoke(null, arr_t));
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(DG.Tweening.TweenSettingsExtensions);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_Append__Sequence__Tween, "Append"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_AppendCallback__Sequence__TweenCallback, "AppendCallback"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_AppendInterval__Sequence__Single, "AppendInterval"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_FromT1__T__Boolean, "From"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_FromT1__T, "From"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_Insert__Sequence__Single__Tween, "Insert"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_InsertCallback__Sequence__Single__TweenCallback, "InsertCallback"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_Join__Sequence__Tween, "Join"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnCompleteT1__T__TweenCallback, "OnComplete"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnKillT1__T__TweenCallback, "OnKill"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnPauseT1__T__TweenCallback, "OnPause"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnPlayT1__T__TweenCallback, "OnPlay"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnRewindT1__T__TweenCallback, "OnRewind"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnStartT1__T__TweenCallback, "OnStart"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnStepCompleteT1__T__TweenCallback, "OnStepComplete"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnUpdateT1__T__TweenCallback, "OnUpdate"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_OnWaypointChangeT1__T__TweenCallbackT1_Int32, "OnWaypointChange"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_Prepend__Sequence__Tween, "Prepend"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_PrependCallback__Sequence__TweenCallback, "PrependCallback"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_PrependInterval__Sequence__Single, "PrependInterval"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetAsT1__T__Tween, "SetAs"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetAsT1__T__TweenParams, "SetAs"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetAutoKillT1__T__Boolean, "SetAutoKill"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetAutoKillT1__T, "SetAutoKill"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetDelayT1__T__Single, "SetDelay"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetEaseT1__T__Ease__Single__Single, "SetEase"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetEaseT1__T__Ease__Single, "SetEase"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetEaseT1__T__Ease, "SetEase"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetEaseT1__T__EaseFunction, "SetEase"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetEaseT1__T__AnimationCurve, "SetEase"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetIdT1__T__Object, "SetId"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetLookAt__TweenerCoreT3_Vector3_Path_PathOptions__Transform__NullableT1_Vector3__NullableT1_Vector3, "SetLookAt"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetLookAt__TweenerCoreT3_Vector3_Path_PathOptions__Vector3__NullableT1_Vector3__NullableT1_Vector3, "SetLookAt"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetLookAt__TweenerCoreT3_Vector3_Path_PathOptions__Single__NullableT1_Vector3__NullableT1_Vector3, "SetLookAt"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetLoopsT1__T__Int32__LoopType, "SetLoops"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetLoopsT1__T__Int32, "SetLoops"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Color_Color_ColorOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Rect_Rect_RectOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector4_Vector4_VectorOptions__AxisConstraint__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_VectorOptions__AxisConstraint__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector4_Vector4_VectorOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Path_PathOptions__AxisConstraint__AxisConstraint, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Path_PathOptions__Boolean__AxisConstraint__AxisConstraint, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_Array_Vector3ArrayOptions__AxisConstraint__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_String_String_StringOptions__Boolean__ScrambleMode__String, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_Array_Vector3ArrayOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector3_Vector3_VectorOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Single_Single_FloatOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector2_Vector2_VectorOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Vector2_Vector2_VectorOptions__AxisConstraint__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetOptions__TweenerCoreT3_Quaternion_Vector3_QuaternionOptions__Boolean, "SetOptions"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetRecyclableT1__T__Boolean, "SetRecyclable"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetRecyclableT1__T, "SetRecyclable"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetRelativeT1__T__Boolean, "SetRelative"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetRelativeT1__T, "SetRelative"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetSpeedBasedT1__T__Boolean, "SetSpeedBased"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetSpeedBasedT1__T, "SetSpeedBased"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetTargetT1__T__Object, "SetTarget"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetUpdateT1__T__UpdateType__Boolean, "SetUpdate"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetUpdateT1__T__Boolean, "SetUpdate"),
        new JSMgr.MethodCallBackInfo(TweenSettingsExtensions_SetUpdateT1__T__UpdateType, "SetUpdate"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
