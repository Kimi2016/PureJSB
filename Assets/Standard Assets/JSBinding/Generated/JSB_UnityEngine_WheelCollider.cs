
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class JSB_UnityEngine_WheelCollider
{

////////////////////// WheelCollider ///////////////////////////////////////
// constructors

static bool WheelCollider_WheelCollider1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new UnityEngine.WheelCollider());
    }

    return true;
}

// fields

// properties
static void WheelCollider_center(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.center;
                JSApi.setVector3S((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)JSApi.getVector3S((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.center = arg0;
    }
}
static void WheelCollider_radius(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.radius;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.radius = arg0;
    }
}
static void WheelCollider_suspensionDistance(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.suspensionDistance;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.suspensionDistance = arg0;
    }
}
static void WheelCollider_suspensionSpring(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.suspensionSpring;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.JointSpring arg0 = (UnityEngine.JointSpring)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.suspensionSpring = arg0;
    }
}
static void WheelCollider_mass(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.mass;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.mass = arg0;
    }
}
static void WheelCollider_forwardFriction(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.forwardFriction;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.WheelFrictionCurve arg0 = (UnityEngine.WheelFrictionCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.forwardFriction = arg0;
    }
}
static void WheelCollider_sidewaysFriction(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.sidewaysFriction;
                JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        UnityEngine.WheelFrictionCurve arg0 = (UnityEngine.WheelFrictionCurve)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.sidewaysFriction = arg0;
    }
}
static void WheelCollider_motorTorque(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.motorTorque;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.motorTorque = arg0;
    }
}
static void WheelCollider_brakeTorque(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.brakeTorque;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.brakeTorque = arg0;
    }
}
static void WheelCollider_steerAngle(JSVCall vc)
{
    if (vc.bGet)
    { 
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.steerAngle;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
    }
    else
    { 
        System.Single arg0 = (System.Single)JSApi.getSingle((int)JSApi.GetType.Arg);
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        _this.steerAngle = arg0;
    }
}
static void WheelCollider_isGrounded(JSVCall vc)
{
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.isGrounded;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void WheelCollider_rpm(JSVCall vc)
{
        UnityEngine.WheelCollider _this = (UnityEngine.WheelCollider)vc.csObj;
        var result = _this.rpm;
                JSApi.setSingle((int)JSApi.SetType.Rval, (System.Single)(result));
}

// methods

static bool WheelCollider_GetGroundHit__WheelHit(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        int r_arg0 = JSApi.incArgIndex();
        UnityEngine.WheelHit arg0;
                JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((UnityEngine.WheelCollider)vc.csObj).GetGroundHit(out arg0)));
        JSApi.setArgIndex(r_arg0);
        JSMgr.datax.setObject((int)JSApi.SetType.ArgRef, arg0);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(UnityEngine.WheelCollider);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        WheelCollider_center,
        WheelCollider_radius,
        WheelCollider_suspensionDistance,
        WheelCollider_suspensionSpring,
        WheelCollider_mass,
        WheelCollider_forwardFriction,
        WheelCollider_sidewaysFriction,
        WheelCollider_motorTorque,
        WheelCollider_brakeTorque,
        WheelCollider_steerAngle,
        WheelCollider_isGrounded,
        WheelCollider_rpm,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(WheelCollider_WheelCollider1, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(WheelCollider_GetGroundHit__WheelHit, "GetGroundHit"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
